import binascii
from web3 import Web3

# Input data provided
input_data = "0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000064e75f0200000000000000000000000000000000000000000000000000000000000000020b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000110d9316ec00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000110d9316ec00000000000000000000000000000000000000000000000000040c7f64d40b0990800000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b82af49447d8a07e3bd95bd0d56f35241523fbab1000bb8dd69db25f6d620a7bad3023c5d32761d353d3de9000000000000000000000000000000000000000000"  # Your input data here

# Initialize a Web3 instance connected to your Ethereum node
w3 = Web3(Web3.HTTPProvider('https://rpc.ankr.com/arbitrum/'))

# Define the types for decoding
types = ["bytes", "bytes[]", "uint256"]

# Parameter data
parameter_data = input_data[10:]

decoded_data = []

# Decode each parameter
current_index = 0
for param_type in types:
    param_data_length = int(parameter_data[current_index + 64:current_index + 128], 16) * 2
    param_data = parameter_data[current_index + 128:current_index + 128 + param_data_length]

    # Use the appropriate decode function based on the type
    if param_type == "bytes":
        decoded_value = int(param_data, 16)  # Convert hex to decimal
    elif param_type == "bytes[]":
        # Decode dynamic array using web3
        array_size = int(param_data[:64], 16)
        item_size = (len(param_data) - 64) // array_size
        decoded_value = [
            int(param_data[i:i + item_size], 16)  # Convert hex to decimal
            for i in range(64, len(param_data), item_size)
        ]
    else:
        decoded_value = int(param_data, 16)

    decoded_data.append(decoded_value)
    current_index += 128 + param_data_length

print("Decoded Data:")
for param, value in zip(types, decoded_data):
    print(f"{param}: {value}")
